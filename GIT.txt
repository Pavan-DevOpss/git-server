
GIT:- GIT is Version control system.it is distributed version control system.
GIT Hub:- 
-------------
=>git hub is a hosted service for git .
=>git hub is provide GUI.

Version Control system:-
----------------------------
=>when develeping a project  , we have committed code , each commit it has going to maintaing a unique commit id , again you have update and commited the code with new commit id , so it is going to maintain a versioing , so we can compare previous versions with new version , so we called git is version control system. 
=>SCM :- 
source code management/version control system.
=>git.
gitlab
bitbucket.
svn-subversion.
tfs-team foundation server.
cvs-concurrent version system.

gifferce between git and other vcs:-
-----------------------------------------
git:- the developer is complete the application development he push the code from local repo to remote repo , so if something happend to remote repositary , the source code is safe at local repositary.
others:- in this vcs systems don't have local repositary concept . directly we are going to work with central repoasitary , directly we are going to work with server , if server is down , we can't able to push , clone the code.
GIT Administration:-
-------------------
=>create a one Organization [it is a boundary ]
=>create a repositary
=>create a team
=>add the resources to the team
=>provide the repo access to the team.
REPOSITARY:-
-----------
=>REPOSITARY is nothing but a directory or folder.initially it is folder , after doing "Git Init" command , it act as Repositary.In short we say Repositary is totality of the history of software project.

Local Repositary:-
-----------------
=> A Source code Comes under the local repositary,then we can say that the code is under versioning.(tracking by git)

to add all files in from working area to staging area:-
------------------------------------------------------

=>git add .
=>git add *

if you want to add particular extension files
---------------------------------------------

=>git add *.js

if you want to add only one particular file
------------------------------------------------
=>git add filename

if you want to commit some files only to local repo:-
---------------------------------------------------
=> git commit -m "fc" fn1 fn2
if you want to see files are in local repo
----------------------------------------------
=>git ll

if you want to commit modified file:-
---------------------------------------
=> git commit -a -m "commir message"
if you want to knwo all the information about commits:-
-------------------------------------------------------
git log
and 
git log filename
=> if you want to know only some previous commits :-
---------------------------------------------------------
=> git log -number
if you want to know full information about one commit:
----------------------------------------------------------
=> git show commitid
if you want to see file name of particular commit:
----------------------------------------------------
=> git show --pretty="" --name-only commit id 
to get back files :-
--------------------
=> git reset
to get back one file from staging area :-
---------------------
=> git reset filename
to get back one file from local repositary:-
---------------------------------------------
=> git revet commit id
=> using this command we can delete files which are added to staging area to local repositary , if any case any updated file is added to local repositary , from this updated file only delete updated content, old content not be deleted.it will deleted files from only in local repositary. 

If you want to delete new files in working directory:
----------------------------------------------------
=> git clean -n => it will show the files preview of going to delete
=> git clean -f => it will delete the files .
=> git clean -f fileName => it will delte particular file

.gitignore:-
-------------
=> some times we don't want to commit the files , which are generated by IDE like .project and .classpath files or some node_modules folders into a git repositary.To ignore these files and folders to commit we will create one file called .gitignore and we will keep files name and directory names which are we don't want to commit as follows.

Branches:-
---------

master/main

all the developers are not going to work with master branch , they arre working at development branch , To maintain various environments we are going to create the branches.

for creating the branch , displaying &  renaming & Deleting the brances we going to use only one command.
       ==> git branch

to switch from one branch to another branch 
====> git checkout Branchname

git checkout: switching to branches....

svn checkout: get the updating code from the remote repo.

git pull === svn checkout

git push === svn checkin 

git merge : using this command we will integrate one branch code to another branch.
scenario1:- destination branch:git merge source(branch)
scenario2:- current branch :git sourcebranch destinationbranch.


==>intead of creating and switching to new branches with two commandds we have one command

        git checkout -b branchname

git diff: using this command we will comapare the code 

git push aliasname bn1 bn2 bn3 
git push aliasname --all :- it is going to push all branches from local repo to remote repo

==> to delete branch from git :-

  git branch -d branceName

==> to tell about deleted branch to github from git 

   git push aliasname :deletedbranchname

==> if you want to display remote repositary branches 

    git branch -r 

==> if you want to display all the branches (locaal and remote repos)

    git branch -a 

==> to delete bugfix branch in local repo

   => git branch -d bugfix

==> to delete bugfix branch in remote repo

 => git push aliasname :bugfix


what is the difference between Branch and tag ?
--------------------------------------------------

Branch                                        Tag
-------                                     -------
=> Branch is Mutable                      => tag is immutable
(we can able to modify )                    (we can unable to modify)
=> create during development              => create after production deployment

git branch                                      git tag 

git branch bn                                   git tag tn

git branch -d bn                                git tag -d tn

git push alias bn                               git push alias tag tn

git push alias --all                            git push alias -tags

tags are creating on which branch ?
---------------------------------------
tags are creating on master branch , from the master branch only we can deploy application to prosuction environment. it is possible to creating tags on other branches , but as per real time scenarios we can creating tags under master branch only.

to delete the tag from local repo :-
--------------------------------------
==> git tag -d tagname
 
to delete tag from remote repositary:-
--------------------------------------
==>git push ailas --delete tag name
